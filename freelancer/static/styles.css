/***************** VARIABLEZ RAIZ *****************/
:root {
    /* Paleta de colores */
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: #FFC107;
    --secundario: #0097A7;
    --gris: #757575;
    --grisClaro: #DFE9F3;

    /* Fuentes */
    --principal: "krub-regular";
    --secundaria: "krub-bold";
}


/***************** GLOBALES *****************/
html {
    font-size: 62.5%;
    box-sizing: border-box;  /* El ancho y alto especificados (width y height) incluyen el padding y el border */
    scroll-snap-type: y mandatory; /* Scroll de la pagina pero en vertilac (y). Mandatory genera un mov adicional para que cuando deje de hacer scroll se reposicione en un punto en especifico */
} 

*, *:before, *:after {
    box-sizing: inherit; /* Hace que todos los elementos hijos hereden el box sizing de su clase padre */
}

body {
    font-family: var(--principal), sans-serif;
    font-size: 16px; /* Debido al redimensionamiento, estos 16px equivalen a 10px, por lo que es facil usar rem. 1rem = 10px */
    background-image: linear-gradient(to top, var(--grisClaro) 0%, var(--blanco) 100%);
}

.boton{
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 3rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: none;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none;
}

@media (min-width: 768px) {    
    .boton {
        width: auto;
    }
    
}

.boton:hover {
    cursor: pointer; /* Habilitar la manito al pasar el cursor por un elemento de clase boton que lo desabhilite como enlaces de tipo post (input type="submit") */
}

.contenedor {
    max-width: 120rem;
    margin: 0 auto 0 auto; /* Es igual a poner esto 0 auto 0 auto; arr, der, ab, izq */
}

.sombra {
    -webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48);
    -moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48);
    box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48);
    background-color: var(--blanco);  
    padding: 10rem;  /* Se usa solo en el contenedor del main, va a generar padding en todos los elementos a usar ,sombra asi q cuidado */
    border-radius: 1rem;
}


/***************** SCROLL SNAP *****************/
.servicios, 
.navegacion-principal, 
.formulario {
    scroll-snap-align: center; /* Se alinea en el centro del area visible para estas clases*/
    scroll-snap-stop: always;  /* Hace que la parada sea fija en estos puntos, evitando que se posicione un poco antes o dps del punto */
}


/***************** TIPOGRAFIA *****************/
h1 {
    font-size: 3.8rem;
}

h2 {
    font-size: 2.8rem;
}

h3 {
    font-size: 1.8rem;
}

h1, h2, h3 {
    text-align: center;
}


/***************** TITULOS *****************/
.w-100 {
    width: 100%;
}

.flex{
    display: flex;
}

.alinear-derecha {
    justify-content: flex-end;
}


/***************** TITULOS *****************/
.titulo span {
    font-size: 2rem;
}


/***************** NAVEGACION PRINCIPAL *****************/
.nav-bg {
    background-color: var(--secundario);
}

.navegacion-principal {  
    display: flex;  /* Habilita flexbox, habilitando el manejo de filas auto*/
    flex-direction: column; /* Row: Activa flexbox en filas, se puede obviar. Column: Para columnas es necesario declararlo. */
    align-items: center; /* Flex start y flex end para izq o der. Solo se aplica con un flex direction: column */
    /* Puedo centrar de igual forma si declaro el display como block y usar text align: center */
} 

@media (min-width: 768px) {
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-between; /* Sin flexbox, no funciona esto. Esto se usa solo en filas, ya que en columnas carece de sentido */ 
    }    
}

.navegacion-principal a{
    color: var(--blanco);
    text-decoration: none;
    font-weight: bold;
    padding: 1rem;  /* 1 1 1 1; */
}

.navegacion-principal a:hover{
    /* Hover es una pseudo clase que se activa al pasar el cursor por un enlace */
    background-color: var(--primario);
    color: var(--oscuro);
}


/***************** HERO *****************/
.hero {
    background-image: url("../img/hero.jpg");
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    position: relative; /* Para poder posicionar de forma exacta la clase hija contenido hero con position absolute */
    margin-bottom: 2rem;
}

.contenido-hero {
    position: absolute;
    background-color: rgba(0,0,0, 0.6); /* Trasparencia forma antigua */
    background-color: rgb(0 0 0 / 70%); /* Trasparencia nueva */
    width: 100%; /* Es igual a poner left y right = 0 */
    height: 100%; /* Es igual a poner left y right = 0*/

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.contenido-hero h2,
.contenido-hero p {
    color: var(--blanco);
}

.contenido-hero ubicacion {
    display: flex;
    align-items: end;
}


/***************** SERVICIOS *****************/
.servicios {
    display: initial;
}

@media (min-width: 768px) {    
    .servicios {
        display: grid;
        /* Pruebas Grid
        grid-template-columns: 300px 300px;
        grid-template-rows: 200px 800px;
        grid: 200px 800px / 300px 300px;  Es igual a lo de arriba 
        */
        grid-template-columns: repeat(3, 1fr); /* Es igual poner esto: 1fr 1fr 1fr. Es igual poner: 33.3% 33.3% 33.3%*/ 
        column-gap: 2rem; 
    }
}

.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;

}

.servicio h3 {
    color: var(--secundario);
    font-weight: bold;
}

.servicio p {
    line-height: 2; /* Interlineado */
    text-align: center;
}

.servicio .iconos {
    height: 10rem;
    width: 10rem;  
    background-color: var(--primario);
    border-radius: 50%;

    display: flex;
    justify-content: space-evenly;
    align-items: center;
}


/***************** CONTACTOS *****************/
.formulario {
    background-color: var(--gris);
    width: min(60rem, 100% ); /* Utilizar el valor mas pequeño. Facilita el no uso de media querys */ 
    /* SE USA PARA CENTRAR UN ELEMENTO DENTRO DE UN CONTENEDOR. TEXT ALIGN CENTER SE USA PARA CENTRAR EL CONTENIDO DE UN ELEMENTO. Que ocupe tdo el espacio disponible */
    margin: 0 auto; /* Esto se usa cuando el padre de la clase no es un diplay flex. Como los formularios, los main, etc. Y como son display block se usa esto. */
    padding: 2rem;
    border-radius: 1rem;
}

.formulario fieldset {
    border: none;
}

.formulario legend {
    color: var(--primario);
    font-size: 1.8rem;
    font-weight: bold;
    text-align: center;
    text-transform: uppercase;
    margin-bottom: 2rem;
}

@media (min-width: 768px) {
    /* Dimension filas y columnas */
    .contenedor-campos {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }

    /* Ubicacion tercer y cuarto elemento en esas filas y columnas */
    .campo:nth-child(3), /* Tercer y cuarto elemento de nombre campo */
    .campo:nth-child(4) { 
        grid-column: 1 / 3;  /* Firefox dev, habilitamos numero de filas en la pestaña diseño para ver tanto se debe extender un elemento en una fila o columna */
    } 
}

.campo {
    margin-bottom: 1rem;
}

.campo label {
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}

.campo textarea {
    height: 20rem;
}

/* Ejemplo de como seleccionar input y sus tipos dentro de una clase x 
.campo input[type="text"],
.campo input[type="tel"] {
    background-color: red;
} 
*/

.input-text {
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}

/***************** FOOTER *****************/
.footer{
    text-align: center;
}
